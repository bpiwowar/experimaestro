  ------
  Manager
  ------
  Benjamin Piwowarski
  ------
  2011-04-08
  ------

Goals

The goals of the experimaestro manager are:

  * Decompose experiments into a set of parametrised tasks
  
  * Standardise the way to run experiments for easier reproduction of experimental results
    in computing science
  
  * To handle easy to read & write experimental plans. For example,
    "<<<collection.id=trec.1/adhoc,trec.2/adhoc * qir.weighting-scheme=tf-idf,tf>>>" 
    will run four experiments where the different parameters (id and weighting shemes) are varied
   
  * To build a documentation for each task
  
  * Uses the scheduler to run jobs
  
  * Provides multiple way to write tasks. Currently, only JavaScript is supported but this could be extend to Python.

  * (<<<Not implemented>>>) To manage data produced by the tasks
  

Main concepts

The main concepts of the manager are:

  * Each input or output is an XML document. This allows for a lot of flexibility: input/outputs can be any valid XML document, but can
    also typed using the same mechanism than in XML Schema.
  
  * Each <<task>> is produced by a <<task factory>>. A task factory has a set of named inputs, a set of named outputs, and a creation method.
  
  * 

* XML format for input or output
 
  Each output is characterised by a XML qualified name (namespace and local name). For example,

+------------------------------------------+
	<example xmlns="http://my.ns" xmlns:xp="sf.net.experimaestro">
		<xp:value id="id" value="abc1"/>
		<xp:resource version="1.0">id-of-resource</xp:resource>
		
		<file>/my/path/to/a/file</file>
		<result>3</result>
		
	</example>
+------------------------------------------+

  is an output with the name <<<example>>> within the namespace <<<http://my.ns>>>.
  It is further identified by the <<<id>>> of value <<<abc1>>>.
  
* Tasks
 



  
 